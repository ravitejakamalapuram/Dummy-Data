var faker = require('faker');

var MongoClient = require('mongodb').MongoClient;
var db;
var collectionName = 'patient';
var bulkDataChunk = [];

// Initialize connection once
MongoClient.connect("mongodb://localhost:27017", function (err, database) {
  if (err) throw err;

  db = database.db('randomData');
  bulk = db.collection(collectionName).initializeUnorderedBulkOp();
  writeSomeDocs();
});

function writeSomeDocs() {

  for (var i = 1; i <= 100; ++i) {
    bulkDataChunk.push({
      insertOne: {
        'column1': faker.address.zipCode(),
        'column2': faker.address.city(),
        'column3': faker.address.cityPrefix(),
        'column4': faker.address.citySuffix(),
        'column5': faker.address.streetName(),
        'column6': faker.address.streetAddress(),
        'column7': faker.address.streetSuffix(),
        'column8': faker.address.streetPrefix(),
        'column9': faker.address.secondaryAddress(),
        'column10': faker.address.county(),
        'column11': faker.address.country(),
        'column12': faker.address.countryCode(),
        'column13': faker.address.state(),
        'column14': faker.address.stateAbbr(),
        'column15': faker.address.latitude(),
        'column16': faker.address.longitude(),
        'column17': faker.commerce.color(),
        'column18': faker.commerce.department(),
        'column19': faker.commerce.productName(),
        'column20': faker.commerce.price(),
        'column21': faker.commerce.productAdjective(),
        'column22': faker.commerce.productMaterial(),
        'column23': faker.commerce.product(),
        'column24': faker.company.suffixes(),
        'column25': faker.company.companyName(),
        'column26': faker.company.companySuffix(),
        'column27': faker.company.catchPhrase(),
        'column28': faker.company.bs(),
        'column29': faker.company.catchPhraseAdjective(),
        'column30': faker.company.catchPhraseDescriptor(),
        'column31': faker.company.catchPhraseNoun(),
        'column32': faker.company.bsAdjective(),
        'column33': faker.company.bsBuzz(),
        'column34': faker.company.bsNoun(),
        'column35': faker.database.column(),
        'column36': faker.database.type(),
        'column37': faker.database.collation(),
        'column38': faker.database.engine(),
        'column39': faker.date.past(),
        'column40': faker.date.future(),
        'column41': faker.date.between(),
        'column42': faker.date.recent(),
        'column43': faker.date.month(),
        'column44': faker.date.weekday(),
        'column45': faker.finance.account(),
        'column46': faker.finance.accountName(),
        'column47': faker.finance.mask(),
        'column48': faker.finance.amount(),
        'column49': faker.finance.transactionType(),
        'column50': faker.finance.currencyCode(),
        'column51': faker.finance.currencyName(),
        'column52': faker.finance.currencySymbol(),
        'column53': faker.finance.bitcoinAddress(),
        'column54': faker.finance.iban(),
        'column55': faker.finance.bic(),
        'column56': faker.hacker.abbreviation(),
        'column57': faker.hacker.adjective(),
        'column58': faker.hacker.noun(),
        'column59': faker.hacker.verb(),
        'column60': faker.hacker.ingverb(),
        'column61': faker.hacker.phrase(),
        'column62': faker.helpers.randomize(),
        'column63': faker.helpers.slugify(),
        'column64': faker.helpers.replaceSymbolWithNumber(),
        'column65': faker.helpers.replaceSymbols(),
        'column66': faker.helpers.shuffle(),
        'column67': faker.helpers.mustache(),
        'column68': faker.helpers.createCard(),
        'column69': faker.helpers.contextualCard(),
        'column70': faker.helpers.userCard(),
        'column71': faker.helpers.createTransaction(),
        'column72': faker.image.image(),
        'column73': faker.image.avatar(),
        'column74': faker.image.imageUrl(),
        'column75': faker.image.abstract(),
        'column76': faker.image.animals(),
        'column77': faker.image.business(),
        'column78': faker.image.cats(),
        'column79': faker.image.city(),
        'column80': faker.image.food(),
        'column81': faker.image.nightlife(),
        'column82': faker.image.fashion(),
        'column83': faker.image.people(),
        'column84': faker.image.nature(),
        'column85': faker.image.sports(),
        'column86': faker.image.technics(),
        'column87': faker.image.transport(),
        'column88': faker.image.dataUri(),
        'column89': faker.internet.avatar(),
        'column90': faker.internet.email(),
        'column91': faker.internet.exampleEmail(),
        'column92': faker.internet.userName(),
        'column93': faker.internet.protocol(),
        'column94': faker.internet.url(),
        'column95': faker.internet.domainName(),
        'column96': faker.internet.domainSuffix(),
        'column97': faker.internet.domainWord(),
        'column98': faker.internet.ip(),
        'column99': faker.internet.ipv6(),
        'column100': faker.internet.userAgent(),
        'column101': faker.internet.color(),
        'column102': faker.internet.mac(),
        'column103': faker.internet.password(),
        'column104': faker.lorem.word(),
        'column105': faker.lorem.words(),
        'column106': faker.lorem.sentence(),
        'column107': faker.lorem.slug(),
        'column108': faker.lorem.sentences(),
        'column109': faker.lorem.paragraph(),
        'column110': faker.lorem.paragraphs(),
        'column111': faker.lorem.text(),
        'column112': faker.lorem.lines(),
        'column113': faker.name.firstName(),
        'column114': faker.name.lastName(),
        'column115': faker.name.findName(),
        'column116': faker.name.jobTitle(),
        'column117': faker.name.prefix(),
        'column118': faker.name.suffix(),
        'column119': faker.name.title(),
        'column120': faker.name.jobDescriptor(),
        'column121': faker.name.jobArea(),
        'column122': faker.name.jobType(),
        'column123': faker.phone.phoneNumber(),
        'column124': faker.phone.phoneNumberFormat(),
        'column125': faker.phone.phoneFormats(),
        'column126': faker.random.number(),
        'column127': faker.random.arrayElement(),
        'column128': faker.random.objectElement(),
        'column129': faker.random.uuid(),
        'column130': faker.random.boolean(),
        'column131': faker.random.word(),
        'column132': faker.random.words(),
        'column133': faker.random.image(),
        'column134': faker.random.locale(),
        'column135': faker.random.alphaNumeric(),
        'column136': faker.system.fileName(),
        'column137': faker.system.commonFileName(),
        'column138': faker.system.mimeType(),
        'column139': faker.system.commonFileType(),
        'column140': faker.system.commonFileExt(),
        'column141': faker.system.fileType(),
        'column142': faker.system.fileExt(),
        'column143': faker.system.directoryPath(),
        'column144': faker.system.filePath(),
        'column145': faker.system.semver(),
        'column146': faker.address.zipCode(),
        'column147': faker.address.city(),
        'column148': faker.address.cityPrefix(),
        'column149': faker.address.citySuffix(),
        'column150': faker.address.streetName(),
        'column151': faker.address.streetAddress(),
        'column152': faker.address.streetSuffix(),
        'column153': faker.address.streetPrefix(),
        'column154': faker.address.secondaryAddress(),
        'column155': faker.address.county(),
        'column156': faker.address.country(),
        'column157': faker.address.countryCode(),
        'column158': faker.address.state(),
        'column159': faker.address.stateAbbr(),
        'column160': faker.address.latitude(),
        'column161': faker.address.longitude(),
        'column162': faker.commerce.color(),
        'column163': faker.commerce.department(),
        'column164': faker.commerce.productName(),
        'column165': faker.commerce.price(),
        'column166': faker.commerce.productAdjective(),
        'column167': faker.commerce.productMaterial(),
        'column168': faker.commerce.product(),
        'column169': faker.company.suffixes(),
        'column170': faker.company.companyName(),
        'column171': faker.company.companySuffix(),
        'column172': faker.company.catchPhrase(),
        'column173': faker.company.bs(),
        'column174': faker.company.catchPhraseAdjective(),
        'column175': faker.company.catchPhraseDescriptor(),
        'column176': faker.company.catchPhraseNoun(),
        'column177': faker.company.bsAdjective(),
        'column178': faker.company.bsBuzz(),
        'column179': faker.company.bsNoun(),
        'column180': faker.database.column(),
        'column181': faker.database.type(),
        'column182': faker.database.collation(),
        'column183': faker.database.engine(),
        'column184': faker.date.past(),
        'column185': faker.date.future(),
        'column186': faker.date.between(),
        'column187': faker.date.recent(),
        'column188': faker.date.month(),
        'column189': faker.date.weekday(),
        'column190': faker.finance.account(),
        'column191': faker.finance.accountName(),
        'column192': faker.finance.mask(),
        'column193': faker.finance.amount(),
        'column194': faker.finance.transactionType(),
        'column195': faker.finance.currencyCode(),
        'column196': faker.finance.currencyName(),
        'column197': faker.finance.currencySymbol(),
        'column198': faker.finance.bitcoinAddress(),
        'column199': faker.finance.iban(),
        'column200': faker.finance.bic(),
        'column201': faker.hacker.abbreviation(),
        'column202': faker.hacker.adjective(),
        'column203': faker.hacker.noun(),
        'column204': faker.hacker.verb(),
        'column205': faker.hacker.ingverb(),
        'column206': faker.hacker.phrase(),
        'column207': faker.helpers.randomize(),
        'column208': faker.helpers.slugify(),
        'column209': faker.helpers.replaceSymbolWithNumber(),
        'column210': faker.helpers.replaceSymbols(),
        'column211': faker.helpers.shuffle(),
        'column212': faker.helpers.mustache(),
        'column213': faker.helpers.createCard(),
        'column214': faker.helpers.contextualCard(),
        'column215': faker.helpers.userCard(),
        'column216': faker.helpers.createTransaction(),
        'column217': faker.image.image(),
        'column218': faker.image.avatar(),
        'column219': faker.image.imageUrl(),
        'column220': faker.image.abstract(),
        'column221': faker.image.animals(),
        'column222': faker.image.business(),
        'column223': faker.image.cats(),
        'column224': faker.image.city(),
        'column225': faker.image.food(),
        'column226': faker.image.nightlife(),
        'column227': faker.image.fashion(),
        'column228': faker.image.people(),
        'column229': faker.image.nature(),
        'column230': faker.image.sports(),
        'column231': faker.image.technics(),
        'column232': faker.image.transport(),
        'column233': faker.image.dataUri(),
        'column234': faker.internet.avatar(),
        'column235': faker.internet.email(),
        'column236': faker.internet.exampleEmail(),
        'column237': faker.internet.userName(),
        'column238': faker.internet.protocol(),
        'column239': faker.internet.url(),
        'column240': faker.internet.domainName(),
        'column241': faker.internet.domainSuffix(),
        'column242': faker.internet.domainWord(),
        'column243': faker.internet.ip(),
        'column244': faker.internet.ipv6(),
        'column245': faker.internet.userAgent(),
        'column246': faker.internet.color(),
        'column247': faker.internet.mac(),
        'column248': faker.internet.password(),
        'column249': faker.lorem.word(),
        'column250': faker.lorem.words(),
        'column251': faker.lorem.sentence(),
        'column252': faker.lorem.slug(),
        'column253': faker.lorem.sentences(),
        'column254': faker.lorem.paragraph(),
        'column255': faker.lorem.paragraphs(),
        'column256': faker.lorem.text(),
        'column257': faker.lorem.lines(),
        'column258': faker.name.firstName(),
        'column259': faker.name.lastName(),
        'column260': faker.name.findName(),
        'column261': faker.name.jobTitle(),
        'column262': faker.name.prefix(),
        'column263': faker.name.suffix(),
        'column264': faker.name.title(),
        'column265': faker.name.jobDescriptor(),
        'column266': faker.name.jobArea(),
        'column267': faker.name.jobType(),
        'column268': faker.phone.phoneNumber(),
        'column269': faker.phone.phoneNumberFormat(),
        'column270': faker.phone.phoneFormats(),
        'column271': faker.random.number(),
        'column272': faker.random.arrayElement(),
        'column273': faker.random.objectElement(),
        'column274': faker.random.uuid(),
        'column275': faker.random.boolean(),
        'column276': faker.random.word(),
        'column277': faker.random.words(),
        'column278': faker.random.image(),
        'column279': faker.random.locale(),
        'column280': faker.random.alphaNumeric(),
        'column281': faker.system.fileName(),
        'column282': faker.system.commonFileName(),
        'column283': faker.system.mimeType(),
        'column284': faker.system.commonFileType(),
        'column285': faker.system.commonFileExt(),
        'column286': faker.system.fileType(),
        'column287': faker.system.fileExt(),
        'column288': faker.system.directoryPath(),
        'column289': faker.system.filePath(),
        'column290': faker.system.semver(),
        'column291': faker.address.zipCode(),
        'column292': faker.address.city(),
        'column293': faker.address.cityPrefix(),
        'column294': faker.address.citySuffix(),
        'column295': faker.address.streetName(),
        'column296': faker.address.streetAddress(),
        'column297': faker.address.streetSuffix(),
        'column298': faker.address.streetPrefix(),
        'column299': faker.address.secondaryAddress(),
        'column300': faker.address.county(),
        'column301': faker.address.country(),
        'column302': faker.address.countryCode(),
        'column303': faker.address.state(),
        'column304': faker.address.stateAbbr(),
        'column305': faker.address.latitude(),
        'column306': faker.address.longitude(),
        'column307': faker.commerce.color(),
        'column308': faker.commerce.department(),
        'column309': faker.commerce.productName(),
        'column310': faker.commerce.price(),
        'column311': faker.commerce.productAdjective(),
        'column312': faker.commerce.productMaterial(),
        'column313': faker.commerce.product(),
        'column314': faker.company.suffixes(),
        'column315': faker.company.companyName(),
        'column316': faker.company.companySuffix(),
        'column317': faker.company.catchPhrase(),
        'column318': faker.company.bs(),
        'column319': faker.company.catchPhraseAdjective(),
        'column320': faker.company.catchPhraseDescriptor(),
        'column321': faker.company.catchPhraseNoun(),
        'column322': faker.company.bsAdjective(),
        'column323': faker.company.bsBuzz(),
        'column324': faker.company.bsNoun(),
        'column325': faker.database.column(),
        'column326': faker.database.type(),
        'column327': faker.database.collation(),
        'column328': faker.database.engine(),
        'column329': faker.date.past(),
        'column330': faker.date.future(),
        'column331': faker.date.between(),
        'column332': faker.date.recent(),
        'column333': faker.date.month(),
        'column334': faker.date.weekday(),
        'column335': faker.finance.account(),
        'column336': faker.finance.accountName(),
        'column337': faker.finance.mask(),
        'column338': faker.finance.amount(),
        'column339': faker.finance.transactionType(),
        'column340': faker.finance.currencyCode(),
        'column341': faker.finance.currencyName(),
        'column342': faker.finance.currencySymbol(),
        'column343': faker.finance.bitcoinAddress(),
        'column344': faker.finance.iban(),
        'column345': faker.finance.bic(),
        'column346': faker.hacker.abbreviation(),
        'column347': faker.hacker.adjective(),
        'column348': faker.hacker.noun(),
        'column349': faker.hacker.verb(),
        'column350': faker.hacker.ingverb(),
        'column351': faker.hacker.phrase(),
        'column352': faker.helpers.randomize(),
        'column353': faker.helpers.slugify(),
        'column354': faker.helpers.replaceSymbolWithNumber(),
        'column355': faker.helpers.replaceSymbols(),
        'column356': faker.helpers.shuffle(),
        'column357': faker.helpers.mustache(),
        'column358': faker.helpers.createCard(),
        'column359': faker.helpers.contextualCard(),
        'column360': faker.helpers.userCard(),
        'column361': faker.helpers.createTransaction(),
        'column362': faker.image.image(),
        'column363': faker.image.avatar(),
        'column364': faker.image.imageUrl(),
        'column365': faker.image.abstract(),
        'column366': faker.image.animals(),
        'column367': faker.image.business(),
        'column368': faker.image.cats(),
        'column369': faker.image.city(),
        'column370': faker.image.food(),
        'column371': faker.image.nightlife(),
        'column372': faker.image.fashion(),
        'column373': faker.image.people(),
        'column374': faker.image.nature(),
        'column375': faker.image.sports(),
        'column376': faker.image.technics(),
        'column377': faker.image.transport(),
        'column378': faker.image.dataUri(),
        'column379': faker.internet.avatar(),
        'column380': faker.internet.email(),
        'column381': faker.internet.exampleEmail(),
        'column382': faker.internet.userName(),
        'column383': faker.internet.protocol(),
        'column384': faker.internet.url(),
        'column385': faker.internet.domainName(),
        'column386': faker.internet.domainSuffix(),
        'column387': faker.internet.domainWord(),
        'column388': faker.internet.ip(),
        'column389': faker.internet.ipv6(),
        'column390': faker.internet.userAgent(),
        'column391': faker.internet.color(),
        'column392': faker.internet.mac(),
        'column393': faker.internet.password(),
        'column394': faker.lorem.word(),
        'column395': faker.lorem.words(),
        'column396': faker.lorem.sentence(),
        'column397': faker.lorem.slug(),
        'column398': faker.lorem.sentences(),
        'column399': faker.lorem.paragraph(),
        'column400': faker.lorem.paragraphs(),
        'column401': faker.lorem.text(),
        'column402': faker.lorem.lines(),
        'column403': faker.name.firstName(),
        'column404': faker.name.lastName(),
        'column405': faker.name.findName(),
        'column406': faker.name.jobTitle(),
        'column407': faker.name.prefix(),
        'column408': faker.name.suffix(),
        'column409': faker.name.title(),
        'column410': faker.name.jobDescriptor(),
        'column411': faker.name.jobArea(),
        'column412': faker.name.jobType(),
        'column413': faker.phone.phoneNumber(),
        'column414': faker.phone.phoneNumberFormat(),
        'column415': faker.phone.phoneFormats(),
        'column416': faker.random.number(),
        'column417': faker.random.arrayElement(),
        'column418': faker.random.objectElement(),
        'column419': faker.random.uuid(),
        'column420': faker.random.boolean(),
        'column421': faker.random.word(),
        'column422': faker.random.words(),
        'column423': faker.random.image(),
        'column424': faker.random.locale(),
        'column425': faker.random.alphaNumeric(),
        'column426': faker.system.fileName(),
        'column427': faker.system.commonFileName(),
        'column428': faker.system.mimeType(),
        'column429': faker.system.commonFileType(),
        'column430': faker.system.commonFileExt(),
        'column431': faker.system.fileType(),
        'column432': faker.system.fileExt(),
        'column433': faker.system.directoryPath(),
        'column434': faker.system.filePath(),
        'column435': faker.system.semver()
      }
    });
  }
  db.collection(collectionName).bulkWrite(bulkDataChunk, function (err, r) {
    // console.log(err)
    // console.log(r)
    bulkDataChunk = [];
    // console.log('Wrote Docs')
    db.collection(collectionName).countDocuments({}, {}, function (error, numOfDocs) {
      console.log('NoOf Docs :  ', numOfDocs)
      if (numOfDocs < 20000000) {
        writeSomeDocs();
      }
    });
  });

}

process.on('unhandledRejection', (reason, p) => {
  console.log('Unhandled Rejection at: Promise', p, 'reason:', reason);
  // application specific logging, throwing an error, or other logic here
});